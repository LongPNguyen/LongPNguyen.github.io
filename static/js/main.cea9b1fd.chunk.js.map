{"version":3,"sources":["me.jpg","components/main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","className","src","require","alt","Body","state","hover","fade","icon","_this2","this","nameFade","onMouseOver","setState","onMouseLeave","React","Component","Footer","class","href","App","main_Header","main_Body","main_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qKCGlCC,EAAS,SAACC,GAAD,OAEXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,IAAKC,EAAQ,IAAwBC,IAAI,KACnEN,EAAAC,EAAAC,cAAA,YAIFK,6MACFC,MAAQ,CAACC,OAAO,KAChBD,MAAQ,CAACE,MAAM,2EACL,IACFC,EADEC,EAAAC,KAENF,GAA4B,IAArBE,KAAKL,MAAMC,MAAiB,gCAAkC,gCAErE,IAAIK,EAIJ,OAHAA,GAA+B,IAApBD,KAAKL,MAAME,KAAgB,YAAc,OAIhDV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,UAAQa,YAAa,kBAAMH,EAAKI,SAAS,CAACN,MAAM,KAAQO,aAAc,kBAAML,EAAKI,SAAS,CAACN,MAAM,KAASP,UAAWW,GAArH,gBACXd,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,UACIa,YAAa,kBAAMH,EAAKI,SAAS,CAACP,OAAO,KAAQQ,aAAc,kBAAML,EAAKI,SAAS,CAACP,OAAO,KAASN,UAAU,0CADlH,uBAGwBH,EAAAC,EAAAC,cAAA,KAAGC,UAAWQ,aAlB/BO,IAAMC,WA+BnBC,EAAS,SAACrB,GAAD,OACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,OAAKmB,MAAM,aACPrB,EAAAC,EAAAC,cAAA,OAAKmB,MAAM,OACPrB,EAAAC,EAAAC,cAAA,OAAKmB,MAAM,kBACPrB,EAAAC,EAAAC,cAAA,mBACIF,EAAAC,EAAAC,cAAA,iJAMRF,EAAAC,EAAAC,cAAA,OAAKmB,MAAM,kBACPrB,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,KAAGoB,KAAK,oDAAmDtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BACxEH,EAAAC,EAAAC,cAAA,KAAGoB,KAAK,+BAA8BtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sCCnCpDoB,0LAhBX,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAACsB,EAAD,MACAxB,EAAAC,EAAAC,cAACuB,EAAD,OAEFzB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAEhBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAACwB,EAAD,eAXQP,cCQEQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.cea9b1fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.0c28ed5f.jpg\";","import React from 'react';\r\n\r\n\r\nconst Header = (props) => (\r\n\r\n    <div className='head'>\r\n        <img className='App-logo' src={require(\"../../../src/me.jpg\")} alt=''/>\r\n        <p></p>\r\n    </div>\r\n)\r\n\r\nclass Body extends React.Component {\r\n    state = {hover: false}\r\n    state = {fade: false}\r\n    render () { \r\n        let icon = 'fas fa-arrow-right'\r\n        icon = this.state.hover === true ? 'fas fa-arrow-right rotateDown' : 'fas fa-arrow-right rotateBack'\r\n\r\n        let nameFade = 'name'\r\n        nameFade = this.state.fade === true ? 'nameHover' : 'name'\r\n\r\n\r\n        return (\r\n            <div className='bod'>\r\n            <p>Hi, I'm <strong onMouseOver={() => this.setState({fade: true})} onMouseLeave={() => this.setState({fade: false})} className={nameFade}>Long Nguyen</strong></p>\r\n            <p>And I'm a Full-stack Developer</p>\r\n            <button \r\n                onMouseOver={() => this.setState({hover: true})} onMouseLeave={() => this.setState({hover: false})} className='aboutBt btn btn-outline-primary btn-sm'\r\n            >\r\n                Learn more about me <i className={icon}></i>\r\n            </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Projects = (props) => (\r\n    <div className='projects'>\r\n        <p></p>\r\n    </div>\r\n)\r\n\r\nconst Footer = (props) => (\r\n    <div className='foot'>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"aboutMe col-md\">\r\n                <h3>About</h3>\r\n                    <p>\r\n                        I'm a full-stack developer with a passion for\r\n                        creating visually appealing designs with a simplistic\r\n                        yet functional user experience.\r\n                    </p>\r\n            </div>\r\n            <div class=\"contact col-md\">\r\n                <p>Connect with me!</p>\r\n                <a href=\"https://www.linkedin.com/in/long-nguyen-a3b6326a\"><i className=\"fab fa-linkedin social\"></i></a>\r\n                <a href=\"https://github.com/nguy4227\"><i className=\"fab fa-github-square social\"></i></a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n)\r\n\r\nexport {\r\n    Header,\r\n    Body,\r\n    Footer,\r\n}","import React, { Component } from 'react';\nimport {Header, Body, Footer} from './components/main'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Header />\n          <Body />\n        </header>\n        <body className=\"Projects\">\n        </body>\n        <footer className=\"App-footer\">\n          <Footer />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}